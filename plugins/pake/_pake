#compdef pake
#autoload

# pake [-f pakefile] {options} targetsâ€¦

local expl
local -a pake_tasks

_pake_tasks() {
    pake_tasks=($(pake --tasks 2> /dev/null|grep '>'|cut -d ">" -f 1))
    if [[ -z $pake_tasks[1] ]]; then
      # if there's a pakefile passed as a parameter, try to use that to find the tasks
      case "$words[2]" in
        --pakefile|-f)
          pake_tasks=($(pake -f ${~words[3]} --tasks 2> /dev/null|grep '>'|cut -d ">" -f 1))
          if [[ -z $pake_tasks[1] ]]; then
            pake_tasks=($(pake -f ${(e)words[3]} --tasks 2> /dev/null|grep '>'|cut -d ">" -f 1))
          fi
          ;;
      esac
    fi

    # don't allow multiple tasks on the command line
    for task in $pake_tasks; do
        if [[ -n ${words[(r)$task]} ]];then
            pake_tasks=()
            return;
        fi
    done
}

_pake_tasks
_wanted pake_tasks expl 'pake tasks available in pakefile' compadd -a pake_tasks

#TODO let _files_for_task only show files in path with @group $task in comment block, so pake unit <tab> only recommends unit tests
#     use _cache_invalid  _retrieve_cache  _store_cache
local -a files_for_task

_files_for_task() {
    case "$1" in
        integration|integration_nosetup)
            files_for_task=($(grep -R '* @group dbunit' ./|grep -v Binary|cut -d ':' -f 1))
            ;;
    esac
}

_arguments \
    - help \
        {-H,--help}'[Display help message.]::' \
    - usage \
        {-h,--usage}'[Display usage.]::' \
    - interactive \
        {-i,--interactive}'[Start pake in interactive (shell-like) mode.]::' \
    - version \
        {-V,--version}'[Display the program version.]::' \
    - tasks \
        {-T,--tasks}'[Display the tasks and dependencies, then exit.]::' \
    - non_interactive \
        {-f,--pakefile=}'[use FILE as the pakefile.]::path to pakefile:_tilde_files -g "[pP]akefile(.php)#"' \
        ':pake tasks :_pake_tasks' \
        ':test file or directory:_tilde_files' \
        {-n,--dry-run}'[Do a dry run without executing actions]' \
        {-I,--libdir=}'[include LIBDIR in the search path for required modules.]:LIBDIR:_tilde_files -/' \
        {-N,--nosearch}'[Do not search parent directories for the pakefile]' \
        {-P,--prereqs}'[Display the tasks and dependencies, then exit.]' \
        {-q,--quiet}'[Do not log messages to standard output.]' \
        {-r,--require=}'[Require php-FILE before executing pakefile.]:FILE:_tilde_files' \
        {-t,--trace}'[Turn on invoke/execute tracing, enable full backtrace.]' \
        {-v,--verbose}'[Log messages to standard output (default).]' \
        '--force-tty[Force coloured output]' \
        '--full-width[Force full width of output]' \
        '--import[Import pake-plugin before executing pakefile.]'
